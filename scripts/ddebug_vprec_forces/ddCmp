#!/usr/bin/env python3
#
# ddCmp: compares the reference run and a current run, returns with success if
# there is no numerical deviation higher than 1e-6.
#
# The first argument is the folder with the reference output, the second
# argument is the folder with the current output.

import sys
import glob
import os
import numpy as np
import math

MAX_DEVIATION = 5
REFDIR = sys.argv[1]
CURDIR = sys.argv[2]
Res = np.zeros(shape=0)

def read_output(DIR, RES):
    resList = glob.glob(os.path.join(DIR, 'res*.dat'))
    resList += glob.glob(os.path.join(REFDIR, 'res*.dat'))
    for resFile in resList:
        with open(resFile) as f:
            RES = np.append(RES, float(f.read()))
    return RES

# 1. read files $CURDIR/res1.dat res2.dat ...
# 2. compute s on the reference valued ? Energy.
# 3. if s < 5 then return sys.exit(1) else return sys.exit(0)

Res = read_output(CURDIR, Res)
print(f"Res = {Res}")
mu = np.mean(Res)
print(f"mean = {mu}")
sigma = np.std(Res)
print(f"sigma = {sigma}")
if sigma != 0:
    s = -math.log10(sigma/abs(mu))
else:
    s = 17

# Write log to CURDIR/res.stat
with open("{}/res.stat".format(CURDIR), 'w') as f:
    print(f"Stat. file loc = {CURDIR}/res.stat")
    f.write("mu = {} sigma = {} s = {}\n".format(
        mu, sigma, s))

# Fail if the deviation is higher than 1e-6
sys.exit(1 if s < MAX_DEVIATION else 0)
